<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:media="http://search.yahoo.com/mrss/"><channel><title><![CDATA[GSOC - Deep Neural Notebooks]]></title><description><![CDATA[Research, Insights & Stories]]></description><link>http://localhost:2368/</link><image><url>http://localhost:2368/favicon.png</url><title>GSOC - Deep Neural Notebooks</title><link>http://localhost:2368/</link></image><generator>Ghost 3.21</generator><lastBuildDate>Sat, 24 Oct 2020 05:52:42 GMT</lastBuildDate><atom:link href="http://localhost:2368/tag/gsoc/rss/" rel="self" type="application/rss+xml"/><ttl>60</ttl><item><title><![CDATA[Google Summer of Code 2019 is a wrap!]]></title><description><![CDATA[<figure class="kg-card kg-image-card kg-width-wide"><img src="https://cdn-images-1.medium.com/max/1200/1*5zndHrmiMesUwi3U5zU0sA.jpeg" class="kg-image" alt></figure><p>This summer, my proposal got selected by <a href="https://www.openrobotics.org" rel="noopener">Open Source Robotics Foundation</a> for Google Summer of Code 2019. It was an awesome learning experience!</p><h3 id="open-source-robotics-foundation">Open Source Robotics Foundation</h3><p>Open Source Robotics Foundation (OSRF), or Open Robotics is an independent non-profit organisation that works on open software and hardware for use in</p>]]></description><link>http://localhost:2368/google-summer-of-code-2019-is-a-wrap/</link><guid isPermaLink="false">5f93ad97f123610eb9e42a7e</guid><category><![CDATA[GSOC]]></category><dc:creator><![CDATA[Mukul Khanna]]></dc:creator><pubDate>Tue, 29 Oct 2019 04:30:00 GMT</pubDate><media:content url="http://localhost:2368/content/images/2020/10/Screenshot-2020-10-24-at-10.04.23-AM.png" medium="image"/><content:encoded><![CDATA[<figure class="kg-card kg-image-card kg-width-wide"><img src="https://cdn-images-1.medium.com/max/1200/1*5zndHrmiMesUwi3U5zU0sA.jpeg" class="kg-image" alt="Google Summer of Code 2019 is a wrap!"></figure><img src="http://localhost:2368/content/images/2020/10/Screenshot-2020-10-24-at-10.04.23-AM.png" alt="Google Summer of Code 2019 is a wrap!"><p>This summer, my proposal got selected by <a href="https://www.openrobotics.org" rel="noopener">Open Source Robotics Foundation</a> for Google Summer of Code 2019. It was an awesome learning experience!</p><h3 id="open-source-robotics-foundation">Open Source Robotics Foundation</h3><p>Open Source Robotics Foundation (OSRF), or Open Robotics is an independent non-profit organisation that works on open software and hardware for use in robotics. Their two open-source software projects — <a href="http://ros.org/" rel="noopener">ROS</a> and <a href="http://gazebosim.org" rel="noopener">Gazebo</a> are the most commonly adopted frameworks for developing robots and their simulations. ROS and Gazebo have done wonders for the robotics community, driving academic research and product development in robotics all over the world. Open Robotics offers consultance, R&amp;D help, open source software services and custom engineering for robotics to industry and government.</p><h3 id="my-project">My project</h3><p>My GSoC proposal was for the <strong>Gazebo Documentation Index </strong>project. It was mentored by the best, <a href="https://twitter.com/_jrivero_?lang=en" rel="noopener">Jose Luis Rivero</a>, who is a Software Engineer at OSRF. My proposal can be accessed <a href="https://summerofcode.withgoogle.com/serve/6486525154426880/" rel="noopener">here</a>. The documentation index that I developed can be accessed <a href="https://osrf.github.io/gazebo-doc-index/" rel="noopener">here</a> and the corresponding Github repo can be found <a href="https://github.com/osrf/gazebo-doc-index" rel="noopener">here</a>.</p><figure class="kg-card kg-image-card"><img src="https://cdn-images-1.medium.com/max/800/0*oaBA-IXejsAtwl1W.jpg" class="kg-image" alt="Google Summer of Code 2019 is a wrap!"></figure><p><a href="http://gazebosim.org" rel="noopener"><strong>Gazebo</strong></a> is an open source software built and maintained by OSRF to accelerate research and development using robotic simulations that make it easy to test and validate algorithmic implementations in real-time on robots in simulated environments, without having to deploy actual physical vehicles every time. This helps in reducing costs, resources and time.</p><figure class="kg-card kg-image-card kg-card-hascaption"><img src="https://cdn-images-1.medium.com/max/800/0*JGB4YJOsl8GWm98q.gif" class="kg-image" alt="Google Summer of Code 2019 is a wrap!"><figcaption>ATLAS walking in Gazebo in real&nbsp;time</figcaption></figure><p>At present, the learning resources for Gazebo are distributed over the internet — the official documentation, the Q&amp;A website and ROS-Answers. Some noteworthy help can also be found through examples and explanations in the comments of Bitbucket issues (Gazebo’s repo) and Gazebo’s API. There are also third-party sources that provide video tutorials and blog posts that are helpful in learning Gazebo. All of this information is distributed across the internet with some links joining each other.</p><p>It can be a bit overwhelming to keep track of one’s learning when the content is distributed as in this case.</p><p>The aim of this project was to bring all the learning material under one webpage in the form of a documentation index that contains links to the content where the respective information is hosted.</p><p>A documentation index is a platform where links to relevant learning resources for a software system are indexed to allow users to find any help at one place.</p><p><a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Index" rel="noopener">HTML</a>, <a href="https://www.intel.com/content/www/us/en/programmable/documentation/lit-index.html" rel="noopener">Intel</a> and <a href="https://www.oracle.com/technetwork/indexes/documentation/index-100966.html" rel="noopener">Oracle</a>, among many others have such doc indexes in place.</p><figure class="kg-card kg-image-card kg-card-hascaption"><img src="https://cdn-images-1.medium.com/max/800/1*C8qPqdXlCZk-yUSl6zOc4A.png" class="kg-image" alt="Google Summer of Code 2019 is a wrap!"><figcaption>HTML’s documentation index</figcaption></figure><p>A documentation index is a neat way to accommodate links to all the relevant learning content into one webpage. It is very convenient since almost any help is just a page quicksearch away. The user can think of related keywords or categories and then look through the index to find the relevant information. Such a platform can act as a one-stop place to get all relevant information about Gazebo.</p><ol><li>Compilation of best learning resources from across the internet, including tutorials, third-party blog posts, Bitbucket issues’ comments and the Gazebo answers website.</li><li>All relevant content under one roof.</li></ol><p>My GSoC project was to build such a documentation index for Gazebo.</p><h3 id="proposed-timeline">Proposed timeline</h3><p>The following is the timeline I presented in my proposal -</p><ol><li>Discussion with the mentees about the frontend and backend framework to be used along with the data format in which the index links will be stored.</li><li>Accumulating the data for the index’s links of where the relevant information is hosted and finalising the structuring of data across the chosen data format files.</li><li>Making index data files available for collaborative maintenance along with rules and recommendations for any contributions to the documentation index in the form of pull requests.</li><li>Simultaneously, developing a prototype that can work with limited number of links.</li><li>Writing test cases to validate the webpage requirements.</li><li>A demo to the mentees and other relevant people in the organisation followed by discussion about areas of improvement in terms of performance and design.</li><li>Working on final version and completion within a stipulated time period.</li><li>After a demo to the mentees, if the implementation is successful, discussion on build and deployment pipelines.</li><li>CI (Continuous Integration) can be set up with Travis CI for automated testing and code building.</li><li>After all the aforementioned requirements are satisfied, the website can be put into production.</li></ol><h3 id="getting-started">Getting started</h3><p>As a part of my proposal for GSoC, I was asked to complete and submit a task that can speak for my experience with web development and a basic understanding of Gazebo. Creating a minimal stub of the doc index website was one of these tasks. My mentor had prepared a basic design for a couple of webpages that I was supposed to emulate.</p><figure class="kg-card kg-image-card kg-card-hascaption"><img src="https://cdn-images-1.medium.com/max/800/1*RvTYuC_JMAZ1hfxdRXQNiQ.png" class="kg-image" alt="Google Summer of Code 2019 is a wrap!"><figcaption>Minimal stub</figcaption></figure><h3 id="choosing-the-stack">Choosing the stack</h3><p>It was during developing these pages that I started thinking about how I could implement the documentation index in a way that it is easy to build, easy to maintain (adding, removing and updating index entries by open-source collaboration), light-weight and fast.</p><p>My preferred tool-kit for building websites was a Vuejs frontend + a Python (Flask) or Nodejs (Expressjs) backend + Heroku for serving a PostgresQL DB and for deployment.</p><p>But this had to be approached differently.</p><p>For example, the doc index would have had been difficult to maintain if the index entries were going to be stored in a conventional database, requiring a lot of pipeline setup, sync issues and making it difficult for any Gazebo developer who wishes to contribute because of requirement of pre-requisite knowledge of the stack.</p><p>Also, I realised that the website would only require two (or three) major template pages, so going for a comprehensive front-end framework would have been overkill.</p><p>I was looking for a more integrated approach (Oh, Steve Jobs would have been so happy to hear that), that would be easier to maintain.</p><p><a href="https://jekyllrb.com" rel="noopener">Jekyll</a> had everything I was looking for. With it’s Static Site Rendering (SSR), templating engines and easy data management using YAML-based frontmatter in Markdown files, Jekyll was the perfect choicde.</p><p>The best thing about Jekyll was how the data of the doc index could reside in these adorable Markdown files that were easy to maintain and collaborate on using Github PRs. This helped in eliminating the requirement of a backend server and a database. Because of Github Pages support for Jekyll, hosting also wasn’t an issue anymore.</p><p>I developed the prototype using Jekyll and after the project started, I discussed the advantages of using Jekyll with my mentor, who agreed that this was the way to go. Some important index entries, that my mentor had listed, were added to the website.</p><h3 id="structuring-the-doc-index">Structuring the doc index</h3><p>The next step was to decide how to structure the doc index in a way that it was easy to scale and again, easy to maintain. We came up with a structure that is two levels deep, classified into categories and subcategories. The first level of abstraction is the category level and the second level is the subcategory level.</p><p><code>Category &gt;&gt; Subcategory &gt;&gt; Index entries</code></p><ul><li>Each category comprises of subcategories and each subcategory comprises of the corresponding index items.</li><li>Each category and index item also contain a brief description of the same.</li><li>More important index items can be shown starred.</li></ul><p>This hierarchical classification, as shown below has complied well with the requirements of the project.</p><pre><code>- category 1    - subcategory 1        - item 1         - item 2</code></pre><pre><code>- subcategory 2        - item 1         - item 2</code></pre><pre><code>- category 2 - category 3</code></pre><h4 id="all-links-page">All links page</h4><p>To allow for the user to be able to find all relevant content on one webpage, an ‘All links’ page was also added. This can help users in finding any help using a browser quicksearch (Ctrl + F).</p><h3 id="testing">Testing</h3><p>Test cases had to be written to automate the procedure of verifying that everything worked fine after any update to the code (commits and PRs). The two primary things to test here are —</p><ul><li>Integrity of index data structure</li><li>Validity of external links in index items</li></ul><p>For the first part, I wrote a spec <a href="https://github.com/osrf/gazebo-doc-index/blob/5cd394bffd5ba35a61cf72512decc4cb0c5b1390/spec/index_integrity_spec.rb" rel="noopener">file</a> in Ruby that parses all the data files and expects the structure of the index data to be maintained. For testing validity of external links, we used the very common <a href="https://github.com/gjtorikian/html-proofer" rel="noopener">html-proofer</a> library that takes care of that.</p><figure class="kg-card kg-image-card kg-card-hascaption"><img src="https://cdn-images-1.medium.com/max/800/0*y78zn4NyN0E3KMpV.png" class="kg-image" alt="Google Summer of Code 2019 is a wrap!"><figcaption>Index integrity test</figcaption></figure><figure class="kg-card kg-image-card kg-card-hascaption"><img src="https://cdn-images-1.medium.com/max/800/0*K1xbY4qY4KKhLkth.png" class="kg-image" alt="Google Summer of Code 2019 is a wrap!"><figcaption>HTMLproofer external link validity&nbsp;test</figcaption></figure><p>These test cases have been automated using Travis CI, that runs these tests for us every time there is a commit or a pull-request in the repo.</p><h3 id="user-interface">User interface</h3><p>For the user interface of the website, I made improvements to the minmal stub created by my mentor, trying to make it clean and minimal so that the prime focus was on the doc index entries.</p><figure class="kg-card kg-image-card kg-card-hascaption"><img src="https://cdn-images-1.medium.com/max/800/1*FZ3oCXILxTi7b4ZNI7MiFA.png" class="kg-image" alt="Google Summer of Code 2019 is a wrap!"><figcaption>Home page</figcaption></figure><p>For ease of collaboration, a ‘Suggest edits’ button was added that directly takes you to the Github editor using which any changes can be made to the index, and a PR can be opened.</p><figure class="kg-card kg-image-card kg-card-hascaption"><img src="https://cdn-images-1.medium.com/max/800/1*CO5Oe59bZf6OlfZOMcnsCw.png" class="kg-image" alt="Google Summer of Code 2019 is a wrap!"><figcaption>Category page</figcaption></figure><h3 id="alpha-launch">Alpha launch</h3><p>With this, we were able to launch the <strong>alpha version </strong>of the Gazebo Documentation Index, inviting developers and users to contribute to the growth of the platform. The alpha release announcement can be accessed <a href="https://community.gazebosim.org/t/gazebo-documentation-index-alpha-release/384" rel="noopener">here</a>.</p><h3 id="what-next">What next</h3><p>This provided us a decent setup to expand on and start finessing the doc index in terms of the data that it provides — the amount of documentation that it covers.</p><p>Other than suggestions from the community about the items that can be added to the doc index, we decided to develop a suggestions-tool — an application that can suggest index entries by scraping the issues on Gazebo’s Bitbucket repository. There is a lot of information in the issues and their comments that is not otherwise documented. These issues can also be a reminder of relevant topics that people are facing difficulties with.</p><p>The suggestions-tool can be accessed <a href="https://gazebo-index.herokuapp.com/" rel="noopener">here</a>.</p><figure class="kg-card kg-image-card kg-card-hascaption"><img src="https://cdn-images-1.medium.com/max/800/1*Mo3Utkhwrx2QuHW53wAS_g.png" class="kg-image" alt="Google Summer of Code 2019 is a wrap!"><figcaption>suggestions-tool</figcaption></figure><p>The suggestions-tool scrapes content from Bitbucket issues, performs NLP based keyword extraction and provides a list of keywords pertaining to each issue. These keywords help in getting a gist of the issue’s content. This information can be used to know whether the corresponding topics have been covered in the doc index. If yes, then these can be marked in the suggestions-tool to keep a track of the issues that have already been covered in the doc index.</p><p>After a careful evaluation of the requirements, the app was developed using Vuejs + Flask + PostgresQL (hosted on Heroku) + Heroku.</p><h3 id="future-work">Future work</h3><p>I had a great time working on this project. I will continue to work on this project at least until it gains popularity and reaches the self-sufficient state. The next step is to get more information about this out to the users, and to get people to refer to this in answers to questions on the community page or the Bitbucket issues page.</p><p>These are the very beginning days of the Documentation Index and it has serious potential to become an important documentation resource that brings together all the relevant learning material in one place,in an organised fashion, helping beginners and professionals save time and resources and find the right help immediately.</p>]]></content:encoded></item></channel></rss>